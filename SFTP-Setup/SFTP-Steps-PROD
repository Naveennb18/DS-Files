Login to the erasmus servers

  - ssh to erasmus machine

    ssh nnoorbhasha@erasmus01.rz01.deposit-solutions.com
    ssh nnoorbhasha@erasmus02.rz01.deposit-solutions.com

Add new User

  - Run the below commands

  sudo su

  /root/bin/new_sftp_user.sh <bank_name>

        [root@erasmus01 nnoorbhasha]# /root/bin/new_sftp_user.sh bib
        - > /sftp
        LSYNCTARGET = > 10.15.1.119
         Bitte ssh-pub-key eingeben: <paste the public key here>

         Note:

            - sometime we may get public key in the format of ssh2. Here is the steps to convert it

                ssh-keygen -i -f ssh2.pub > openssh.pub

  - A new user will be added by using /root/bin/new_sftp_user.sh on  both erasmus.

      ls /sftp/<user>

      [root@erasmus01 nnoorbhasha]# ls /sftp/bib/
      archiv  dev  inbox  outbox
      [root@erasmus01 nnoorbhasha]#

  - After the new user exist on both server the lsyncd process has to be restartet on active server.

      systemctl restart lsyncd (It should only be done on erasmus01)

      systemctl status lsyncd (No need to check the status on erasmus02)


  - For the ds-report-delivery service to be able to move files into the newly generated banks folder (/sftp/<user>) we need to create an SSH key and update the service configuration.
  - To create the ssh public/private key pair (on a mac running MacOS Catalina or later) go to an empty temporary folder and run the following commands.

    mkdir temp
    cd temp
    bank=<<BANK>>
    bankenvironment=<<ENV>> Example: prod
    openssl genpkey -algorithm RSA -out ${bank}_sftp_id_rsa -pkeyopt rsa_keygen_bits:4096
    openssl rsa -in ${bank}_sftp_id_rsa -pubout > ${bank}_sftp_id_rsa.pub
    ssh-keygen -i -m PKCS8 -f ${bank}_sftp_id_rsa.pub > ${bank}_sftp_id_rsa_pkcs8.pub
    sed "s/\$/ report-delivery-service-${bankenvironment}/" ${bank}_sftp_id_rsa_pkcs8.pub > ${bank}_sftp_id_rsa.pub; rm ${bank}_sftp_id_rsa_pkcs8.pub
    gpg --encrypt --armor --trust-model always -r salt-prod@deposit-solutions.com --output ${bank}_sftp_id_rsa.gpg ${bank}_sftp_id_rsa

    Note: Make sure gpg package is installed in the local machine, if not - install with the following command:

      brew install gpg


  - Place the public key in /sftp/<user>/.ssh/authorized_keys

    $ vi /sftp/<user>/.ssh/authorized_keys --> This step should be done on both the erasmus servers

      - Add the generated public key to the authorized_keys

  - Update the private key on shared-salt repository

    - checkout to feature branch and make the following Changes

      repo: git@git.prod.infra.deposit:saltstack/shared-salt.git

      $ git checkout -b feature/<TICKET_NUMBER>

    - Add the gpg encrypted private key into git@git.prod.infra.deposit:saltstack/shared-salt.git

      cp <TMP_LOCALTION>/<user>_sftp_id_rsa.gpg pillar/files/keys/ds-report-delivery-service/sftp/${bankenvironment}/

        - Copy the file (<user>_sftp_id_rsa.gpg) and paste it to "pillar/files/keys/ds-report-delivery-service/sftp/"

    - Add the file to the files state  by adding a line to "pillar/files/ds-report-delivery-service.sls"

      {{ sftp_key("<user>", "NEW_BANKS_BIC") | indent(4) }} <---- THIS IS THE NEW LINE

    - If the bank needs a gpg encryption key also add this key by:

      - copy the .asc file to pillar/files/keys/ds-report-delivery-service/gpg/${bankenvironment}/ in the shared-salt repo (gpg keys can be found here: SFTP Accounts)
      - add another line to pillar/files/ds-report-delivery-service.sls These files only need to be changed once for all environments (please keep the alphabetic order)

        {{ public_gpg("<user>", "NEW_BANKS_BIC") | indent(4) }} <--- THIS IS THE NEW LINE

  - Update the shared-config-vars repo

    - checkout to feature branch and make the following Changes

      repo:https://git.prod.infra.deposit/deployment/shared-config-vars

      $ git checkout -b feature/<TICKET_NUMBER>

    - edit the file ds-report-delivery-service.yml and add the new bank

        #<user>                                               <--- NEW LINE
        - "APP_PRODUCTBANK_<NEW_BANKS_BIC>_USERNAME=<user>"   <--- NEW LINE

    - Commit the changes and raise a merge request

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- ssh to salt servers

  - Note: setup the salt before connecting as follows: (https://confluence.deposit-solutions.com/display/INFRA/Salt+resources+and+procedures)

      - Download the gpg file from https://depositsolutions.sharepoint.com/sites/DevOps2/Freigegebene%20Dokumente/General/salt-master-prod-pubkey.gpg

      - Run the gpg file using the command:

          gpg --import salt-master-prod-pubkey.gpg

  $ ssh nnoorbhasha@salt1.prod.infra.deposit

  $ sudo -i

  $ history | grep time

  $ time salt-run fileserver.update

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Execute the state module

  - We need to apply the states for all the app servers

    - ssh to the below app servers first and execute the commands as root user

        ssh nnoorbhasha@app1.prod.shared.deposit
        ssh nnoorbhasha@app2.prod.shared.deposit
        ssh nnoorbhasha@app3.prod.shared.deposit
        ssh nnoorbhasha@app4.prod.shared.deposit

      $ sudo -i

      $ salt-call state.sls files

      $ ls -la /etc/comonea/ds-report-delivery-service/keys/sftp/

        - Newly added key should be there in the list "<BIC_Code>_sftp_id_rsa"

      - Check the changes that have been applied

      - Check the version to deploy in the jenkins
        ls -la /opt/comonea/app/

          - Example:

            - /usr/lib/comonea/dist/ds-report-delivery-service/report-delivery-service-1.0.2.jar (Version = 1.0.2)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Deployment on the Jenkins

  - Login to the Jenkins dashboard - https://deployment-jenkins.deposit-solutions.com/ (Login with AD credentials)

    - Select PROD_SHARED

      - Select PROD_SHARED_deploy_CD

        - Build with parameters and make a build on all the below mentioned target_host
          - target_host:
              app1.prod.shared.deposit (1.1.0)
              app2.prod.shared.deposit (1.1.0)
              app3.prod.shared.deposit (1.1.0)
              app4.prod.shared.deposit (1.1.0)
          - appliocation : ds-report-delivery-service
          - version : <The version number that we get during the salt state execution>



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Adding ip addresses to the firewall on Juniper

  - Login to  http://10.15.7.254/ (Password should be get from MacPass)

  1. Add IP address to the list

    - Policy --> Policy Elements --> Addresses --> List

      - Click on the new from top right corner and add the following details

        - Address Name = EXT_Credorax_199.233.202.0 (Example)
        - IP Address/Netmask = 199.233.202.0 / 23 (Example)

      - Click on "OK"

  2. Adding to Group Members

    - Policy --> Policy Elements --> Addresses --> Groups

      - Edit the name of the tenant where it's need to be added from the "configure" column (EXT_SFTP_TENANTS2)
      - Add the group name that was created in the previous section from right to left

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Add files to the erasmus servers from local machine

  $ scp myfile.txt remoteuser@remoteserver:/tmp/

  $ cp /tmp/myfile.txt /sftp/user_name/outbox/

  Ex:

    scp test.csv nnoorbhasha@erasmus01.rz01.deposit-solutions.com:/tmp/
    scp test.xls nnoorbhasha@erasmus02.rz01.deposit-solutions.com:/tmp/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

TEST
----

  - Test if the setup is Successful or Not

      1. Login to the app servers

        % ssh nnoorbhasha@app1.prod.shared.deposit

        % sudo -i

        % cd /etc/comonea/ds-report-delivery-service/keys/sftp

        % sftp -i PSANIT3P_sftp_id_rsa bpsa@erasmus01.rz01.deposit-solutions.com

        % sftp -i BLIBLV22XXX_sftp_id_rsa bib@erasmus01.rz01.deposit-solutions.com


        sftp -i bib_sftp_id_rsa bib@app1.prod.shared.deposit

-----------------------------------------------------------------------------------------
PROD:
-----
user: deutsche
server: xfer.deposit-solutions.com
IP: 212.12.36.121

connect using:
sftp deutsche@xfer.deposit-solutions.com

TEST:
-----
user: deutsche
server: xfer-test.deposit-solutions.com
IP: 212.12.36.120

connect using:
sftp deutsche@xfer-test.deposit-solutions.com
-----------------------------------------------------------------------------------------
